name: development-workflow

on:
  workflow_dispatch:
    inputs:
      remove_deployment:
        type: boolean
        description: "Remove Deployment"
        required: true
        default: true

permissions:
  id-token: write
  contents: read
  statuses: write

env:
  moduleTestSubDir: "tests/e2e/defaults"
  moduleTestFileName: "main.test.bicep"
  elementsRootFolder: "elements/res"

jobs:
  Lint-Code:
    runs-on: ubuntu-latest
    environment: sandbox
    steps:
      - name: Checkout the feature branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Define Inputs
        id: define_inputs
        shell: pwsh
        run: |
          # Split the branch name into module name and version
          $moduleParts = "${{ github.ref_name }}" -split '/'
          # Module name
          $moduleName = "$($moduleParts[0])/$($moduleParts[1])"
          # Module path
          $modulePath = "elements/res/$moduleName"
          # Set the outputs
          Add-Content -Path $env:GITHUB_OUTPUT -Value "module_name=$moduleName"
          Add-Content -Path $env:GITHUB_OUTPUT -Value "module_path=$modulePath"

      - name: Run Lint Code
        id: lint_code
        uses: ./.github/actions/templates/lint
        with:
          module_path: ${{ steps.define_inputs.outputs.module_path }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

  Validate-Deployment:
    needs:
      - Lint-Code
    runs-on: ubuntu-latest
    environment: sandbox
    steps:
      - name: Checkout the feature branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
      - name: Define inputs
        id: define_inputs
        shell: pwsh
        run: |
          # Split the branch name into module name and version
          $moduleParts = "${{ github.ref_name }}" -split '/'
          # Module name
          $moduleName = "$($moduleParts[0])/$($moduleParts[1])"
          # Set the outputs
          Add-Content -Path $env:GITHUB_OUTPUT -Value "module_name=$moduleName"
      - name: validate Bicep Test E2E Defaults
        id: validate_bicep
        uses: ./.github/actions/templates/validate
        with:
          module_name: "${{ steps.define_inputs.outputs.module_name }}"
          test_subdir: "${{ env.moduleTestSubDir }}"
          file_name: "${{ env.moduleTestFileName }}"
          region: ${{ vars.AZURE_RESOURCE_REGION }}
          namePrefix: ${{ vars.AZURE_RESOURCE_PREFIX }}
          azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  Deploy-Deployment:
    needs:
      - Validate-Deployment
    runs-on: ubuntu-latest
    environment: sandbox
    steps:
      - name: Checkout the feature branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
      - name: Define inputs
        id: define_inputs
        shell: pwsh
        run: |
          # Split the branch name into module name and version
          $moduleParts = "${{ github.ref_name }}" -split '/'
          # Module name
          $moduleName = "$($moduleParts[0])/$($moduleParts[1])"
          # Set the outputs
          Add-Content -Path $env:GITHUB_OUTPUT -Value "module_name=$moduleName"
      - name: Create Deployment Stack - tests/e2e/defaults
        id: deploy_bicep
        uses: ./.github/actions/templates/deploy
        with:
          module_name: "${{ steps.define_inputs.outputs.module_name }}"
          test_subdir: "${{ env.moduleTestSubDir }}"
          file_name: "${{ env.moduleTestFileName }}"
          region: ${{ vars.AZURE_RESOURCE_REGION }}
          namePrefix: ${{ vars.AZURE_RESOURCE_PREFIX }}
          azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  Remove-Deployment:
    if: ${{ inputs.remove_deployment == true }}
    needs:
      - Deploy-Deployment
    runs-on: ubuntu-latest
    environment: sandbox
    steps:
      - name: Checkout the feature branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
      - name: Define inputs
        id: define_inputs
        shell: pwsh
        run: |
          # Split the branch name into module name and version
          $moduleParts = "${{ github.ref_name }}" -split '/'
          # Module name
          $moduleName = "$($moduleParts[0])/$($moduleParts[1])"
          # Set the outputs
          Add-Content -Path $env:GITHUB_OUTPUT -Value "module_name=$moduleName"
      - name: Remove Deployment Stack
        uses: ./.github/actions/templates/remove
        with:
          module_name: ${{ steps.define_inputs.outputs.module_name }}
          azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
