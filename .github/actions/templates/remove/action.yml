name: "Remove Deployment Stack"
description: "Clean up resources deployed for testing"

inputs:
  module_name:
    description: "Specify the module name (e.g., network/network-security-group)"
    required: true
  namePrefix:
    description: "Name prefix for the resources"
    required: false
    default: "prxsbx"
  azure_client_id:
    description: "Az Auth: Azure client ID"
    required: true
  azure_tenant_id:
    description: "Az Auth: Azure tenant ID"
    required: true
  azure_subscription_id:
    description: "Az Auth: Azure subscription ID"
    required: true

runs:
  using: "composite"
  steps:
    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ inputs.azure_client_id }}
        tenant-id: ${{ inputs.azure_tenant_id }}
        subscription-id: ${{ inputs.azure_subscription_id }}
        enable-AzPSSession: true

    - name: Cleanup Deployment Stack
      shell: pwsh
      run: |
        # Generate the resource group name
        $moduleName = "${{ inputs.module_name }}" -replace '/', '-'
        # $resourceGroupName = "dep-${{ inputs.namePrefix }}-$($moduleName)-tests-rg"
        # Write-Output "Resource Group Name: $resourceGroupName"

        # if ($resourceGroupName) {
        #   Write-Output "Cleaning up Resource Group: $($resourceGroupName)"
        #   az group delete --name $resourceGroupName --yes --no-wait
        # } else { Write-Error "Resource group not found." }

        $deploymentStackName = "dep-${{ inputs.namePrefix }}-$($moduleName)-tests-ds"
        if ($deploymentStackName) {
          Write-Output "Deleting Deployment Stack: $($deploymentStackName)"
          az stack sub delete --name $deploymentStackName --action-on-unmanage deleteAll --yes --bypass-stack-out-of-sync-error
        } else { Write-Error "Resource group not found." }
