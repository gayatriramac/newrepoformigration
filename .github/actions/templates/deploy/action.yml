name: "Deploy Bicep Template"
description: "Deploy a Bicep template to Azure and output the resource group name"

inputs:
  module_name:
    description: "Specify the module path (e.g., avm/res/network/network-security-group)"
    required: true
  test_subdir:
    description: "Specify the test subdirectory (e.g., tests/e2e/defaults)"
    required: true
  file_name:
    description: "Specify the Bicep file name"
    required: true
    default: "main.test.bicep"
  region:
    description: "Deployment region (e.g., westeurope)"
    required: false
    default: "westeurope"
  namePrefix:
    description: "Name prefix for the resources"
    required: false
    default: "prxsbx"
  azure_client_id:
    description: "Az Auth: Azure client ID"
    required: true
  azure_tenant_id:
    description: "Az Auth: Azure tenant ID"
    required: true
  azure_subscription_id:
    description: "Az Auth: Azure subscription ID"
    required: true

runs:
  using: "composite"
  steps:
    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ inputs.azure_client_id }}
        tenant-id: ${{ inputs.azure_tenant_id }}
        subscription-id: ${{ inputs.azure_subscription_id }}
        enable-AzPSSession: true

    - name: Deploy Bicep Template
      id: deploy_bicep_task
      shell: pwsh
      run: |
        $templatePath = "${{ github.workspace }}/elements/res/${{ inputs.module_name }}/${{ inputs.test_subdir }}/${{ inputs.file_name }}"
        Write-Output "Deploying Az Stack - Bicep template: $($templatePath)"
        # Generate the resource group name
        $moduleName = "${{ inputs.module_name }}" -replace '/', '-'
        $resourceGroupName = "dep-${{ inputs.namePrefix }}-$($moduleName)-tests-rg"
        Write-Output "Resource Group Name: $resourceGroupName"

        # $deploymentOutput = az deployment sub create --location "${{ inputs.region }}" --template-file "$templatePath" --parameters namePrefix=${{ inputs.namePrefix }} resourceGroupName=$resourceGroupName

        $deploymentStackName = "dep-${{ inputs.namePrefix }}-$($moduleName)-tests-ds"
        Write-Output "Deployment Stack Name: $deploymentStackName"
        $deployment = az stack sub create --name "$($deploymentStackName)" --template-file "$templatePath" --parameters namePrefix=${{ inputs.namePrefix }} --location "${{ inputs.region }}" --description "${{ inputs.region }}" --deny-settings-mode None --action-on-unmanage deleteAll --yes

        if ($LASTEXITCODE -ne 0) {
          Write-Error "Deployment command failed."
          exit 1
        }

