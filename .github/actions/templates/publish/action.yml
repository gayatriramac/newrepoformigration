name: "Publish Bicep Modules to ACR"
description: "Publishes Bicep modules to Azure Container Registry (ACR)"

inputs:
  acr_name:
    description: "The name of the Azure Container Registry (ACR) to publish to"
    required: true
  base_module_path:
    description: "Base path for modules (e.g., elements/res/network/network-security-group)"
    required: true
  version:
    description: "Version tag for the Bicep module (e.g., 1.0.0)"
    required: true
  azure_client_id:
    description: "Az Auth: Azure client ID"
    required: true
  azure_tenant_id:
    description: "Az Auth: Azure tenant ID"
    required: true
  azure_subscription_id:
    description: "Az Auth: Azure subscription ID"
    required: true

outputs:
  publish_status:
    description: "Status of the publish operation"
    value: ${{ env.publish_status }}

runs:
  using: "composite"
  steps:
    - name: Install or Update Bicep CLI
      shell: bash
      run: |
        az bicep install
        az bicep upgrade

    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ inputs.azure_client_id }}
        tenant-id: ${{ inputs.azure_tenant_id }}
        subscription-id: ${{ inputs.azure_subscription_id }}
        enable-AzPSSession: true

    - name: Publish Bicep Modules
      shell: pwsh
      run: |
        Write-Output "New Patch version: ${{ inputs.version }}"

        # Find all main.bicep files in the specified directory structure
        Get-ChildItem -Path ${{ inputs.base_module_path }} -Recurse -Filter "main.bicep" | ForEach-Object {
            $bicepFile = $_.FullName
            Write-Output "Publishing module at path: ${{ inputs.base_module_path }} - Version: ${{ inputs.version }}"

            # Publish the Bicep file to ACR with the directory structure and version
            az bicep publish --file $bicepFile --target "br:${{ inputs.acr_name }}.azurecr.io/${{ inputs.base_module_path }}:${{ inputs.version }}" --force
        }

    - name: Set publish status
      shell: bash
      run: echo "publish_status=success" >> "$GITHUB_ENV"

